/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.3-SNAPSHOT).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package pl.itger.PolishAPI.io.swagger.api;

import pl.itger.PolishAPI.io.swagger.model.ConfirmationOfFundsRequest;
import pl.itger.PolishAPI.io.swagger.model.ConfirmationOfFundsResponse;
import pl.itger.PolishAPI.io.swagger.model.Error;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2019-03-13T14:12:57.306+01:00")

@Api(value = "Caf", description = "the Caf API")
public interface CafApi {

    CafApiDelegate getDelegate();

    @ApiOperation(value = "Confirmation of the availability of funds", nickname = "getConfirmationOfFunds", notes = "Confirming the availability on the payers account of the amount necessary to execute the payment transaction, as defined in Art. 65 PSD2.", response = ConfirmationOfFundsResponse.class, tags={ "CAF", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Success", response = ConfirmationOfFundsResponse.class),
        @ApiResponse(code = 400, message = "Bad request", response = Error.class),
        @ApiResponse(code = 403, message = "Forbidden", response = Error.class),
        @ApiResponse(code = 405, message = "Method Not Allowed", response = Error.class),
        @ApiResponse(code = 406, message = "Not Acceptable", response = Error.class),
        @ApiResponse(code = 415, message = "Unsupported Media Type", response = Error.class),
        @ApiResponse(code = 422, message = "Unprocessable entity", response = Error.class),
        @ApiResponse(code = 429, message = "Request limit for the requested service exceeded", response = Error.class),
        @ApiResponse(code = 500, message = "Internal Server Error", response = Error.class),
        @ApiResponse(code = 501, message = "Not Implemented", response = Error.class),
        @ApiResponse(code = 503, message = "Service Unavailable", response = Error.class) })
    @RequestMapping(value = "/v2_1_2.1/confirmation/v2_1_2.1/getConfirmationOfFunds",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    default ResponseEntity<ConfirmationOfFundsResponse> getConfirmationOfFunds(@ApiParam(value = "Gzip, deflate" ,required=true, allowableValues="gzip, deflate") @RequestHeader(value="Accept-Encoding", required=true) String acceptEncoding,@ApiParam(value = "Prefered language of response" ,required=true) @RequestHeader(value="Accept-Language", required=true) String acceptLanguage,@ApiParam(value = "UTF-8" ,required=true, allowableValues="utf-8") @RequestHeader(value="Accept-Charset", required=true) String acceptCharset,@ApiParam(value = "Detached JWS signature of the body of the payload" ,required=true) @RequestHeader(value="X-JWS-SIGNATURE", required=true) String X_JWS_SIGNATURE,@ApiParam(value = "Identyfikator żądania w formacie UUID (Wariant 1, Wersja 1), zgodnym ze standardem RFC 4122, nadawany przez TPP. Wartość musi być zgodna z parametrem requestId przekazywanym w ciele każdego żądania. / Request identifier using UUID format (Variant 1, Version 1), described in RFC 4122 standard, set by TPP. Value of this header must be the same as for the requestId param passed inside request payload." ,required=true) @RequestHeader(value="X-REQUEST-ID", required=true) String X_REQUEST_ID,@ApiParam(value = "Object with amount to check" ,required=true )  @Valid @RequestBody ConfirmationOfFundsRequest confirmationOfFundsRequest) {
        return getDelegate().getConfirmationOfFunds(acceptEncoding, acceptLanguage, acceptCharset, X_JWS_SIGNATURE, X_REQUEST_ID, confirmationOfFundsRequest);
    }

}
